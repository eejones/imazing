class Product < ActiveRecord::Base
  include UsersHelper
  include Filterable

  has_many :messages

  belongs_to :transaction
  belongs_to :user

  belongs_to :modality
  belongs_to :modtype
  belongs_to :manufacturer

  belongs_to :overallcategory


  has_many :uploads

  has_many :product_images, :class_name => "ProductImage"
  
  has_one :primary_photo, :class_name=> "ProductImage"

  accepts_nested_attributes_for :product_images, :allow_destroy => true

  validates_presence_of :modality, :modtype, :manufacturer, :overallcategory, :year

#adding scopes to better filter results 
  scope :modality_id, -> (modality_id) { where modality_id: modality_id }
  scope :manufacturer_id, -> (manufacturer_id) { where manufacturer_id: manufacturer_id }
  scope :modtype_id, -> (modtype_id) { where modtype_id: modtype_id }

  include ApplicationHelper
# have to set inheritance column to nil to allow the use of attribute named 'type' with self.inheritance_column = nil
self.inheritance_column = nil

#should use sphynx instead for full text search
def self.search(search)
  if search
#    where('modtype_name LIKE ?', "%#{search}%")
    where("modtype_name LIKE ? OR manufacturer_name LIKE ? OR modality_name LIKE ?", "%#{search}%", "%#{search}%", "%#{search}%")
  else
    scoped
  end
end

#  after_validation :geocode

end
